// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/pages/tv_series_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:ditonton/common/state_enum.dart' as _i5;
import 'package:ditonton/domain/entities/tv.dart' as _i6;
import 'package:ditonton/domain/usecases/get_now_playing_on_tv.dart' as _i2;
import 'package:ditonton/domain/usecases/get_popular_on_tv.dart' as _i3;
import 'package:ditonton/presentation/provider/tv_series_list_notifier.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetNowPlayingOnTv_0 extends _i1.Fake
    implements _i2.GetNowPlayingOnTv {}

class _FakeGetPopularOnTv_1 extends _i1.Fake implements _i3.GetPopularOnTv {}

/// A class which mocks [TvSeriesListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesListNotifier extends _i1.Mock
    implements _i4.TvSeriesListNotifier {
  MockTvSeriesListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingOnTv get getNowPlayingOnTv =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingOnTv),
          returnValue: _FakeGetNowPlayingOnTv_0()) as _i2.GetNowPlayingOnTv);
  @override
  _i3.GetPopularOnTv get getPopularOnTv =>
      (super.noSuchMethod(Invocation.getter(#getPopularOnTv),
          returnValue: _FakeGetPopularOnTv_1()) as _i3.GetPopularOnTv);
  @override
  _i5.RequestState get onAirState =>
      (super.noSuchMethod(Invocation.getter(#onAirState),
          returnValue: _i5.RequestState.Empty) as _i5.RequestState);
  @override
  List<_i6.Tv> get onAir =>
      (super.noSuchMethod(Invocation.getter(#onAir), returnValue: <_i6.Tv>[])
          as List<_i6.Tv>);
  @override
  String get onAirMessage =>
      (super.noSuchMethod(Invocation.getter(#onAirMessage), returnValue: '')
          as String);
  @override
  _i5.RequestState get popularState =>
      (super.noSuchMethod(Invocation.getter(#popularState),
          returnValue: _i5.RequestState.Empty) as _i5.RequestState);
  @override
  List<_i6.Tv> get popular =>
      (super.noSuchMethod(Invocation.getter(#popular), returnValue: <_i6.Tv>[])
          as List<_i6.Tv>);
  @override
  String get popularMessage =>
      (super.noSuchMethod(Invocation.getter(#popularMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i7.Future<void> fetchNowPlayingOnTv() =>
      (super.noSuchMethod(Invocation.method(#fetchNowPlayingOnTv, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> fetchPopularOnTv() =>
      (super.noSuchMethod(Invocation.method(#fetchPopularOnTv, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  void addListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
