// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/provider/tv_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/enum.dart' as _i14;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/episode.dart' as _i12;
import 'package:ditonton/domain/entities/tv.dart' as _i10;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i8;
import 'package:ditonton/domain/entities/watch.dart' as _i16;
import 'package:ditonton/domain/repositories/tv_repository.dart' as _i2;
import 'package:ditonton/domain/repositories/watch_repository.dart' as _i4;
import 'package:ditonton/domain/usecases/get_episode_tv.dart' as _i11;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i5;
import 'package:ditonton/domain/usecases/get_tv_recommendation.dart' as _i9;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i13;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i17;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvRepository_0 extends _i1.Fake implements _i2.TvRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeWatchRepository_2 extends _i1.Fake implements _i4.WatchRepository {}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i5.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvRepository_0()) as _i2.TvRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, _i8.TvDetail>>.value(
                  _FakeEither_1<_i7.Failure, _i8.TvDetail>()))
          as _i6.Future<_i3.Either<_i7.Failure, _i8.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i9.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvRepository_0()) as _i2.TvRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.Tv>>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i10.Tv>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i10.Tv>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i10.Tv>>>);
}

/// A class which mocks [GetEpisodeTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEpisodeTv extends _i1.Mock implements _i11.GetEpisodeTv {
  MockGetEpisodeTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvRepository_0()) as _i2.TvRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i12.Episode>>> execute(
          int? idTv, int? idSeason) =>
      (super.noSuchMethod(Invocation.method(#execute, [idTv, idSeason]),
              returnValue:
                  Future<_i3.Either<_i7.Failure, List<_i12.Episode>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i12.Episode>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i12.Episode>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i13.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeWatchRepository_2()) as _i4.WatchRepository);
  @override
  _i6.Future<bool> execute(int? id, _i14.Type? type) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, type]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i15.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeWatchRepository_2()) as _i4.WatchRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i16.Watch? watch) =>
      (super.noSuchMethod(Invocation.method(#execute, [watch]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i17.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeWatchRepository_2()) as _i4.WatchRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i16.Watch? watch) =>
      (super.noSuchMethod(Invocation.method(#execute, [watch]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
